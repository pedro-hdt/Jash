/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 19 16:50:30 GMT 2020
 */

package automated.sg.edu.nus.comp.cs4218.impl.cmd;


import static org.junit.jupiter.api.Assertions.assertNull;

import java.util.List;

import org.junit.jupiter.api.Test;

import sg.edu.nus.comp.cs4218.impl.cmd.CallCommand;
import sg.edu.nus.comp.cs4218.impl.cmd.PipeCommand;

@SuppressWarnings("PMD")
public class PipeCommand_ESTest {

//  @Test
//  public void test0()  throws Throwable  {
//      PipeCommand pipeCommand0 = new PipeCommand((List<CallCommand>) null);
//      InputStream inputStream0 = mock(InputStream.class, new ViolatedAssumptionAnswer());
//      OutputStream outputStream0 = mock(OutputStream.class, new ViolatedAssumptionAnswer());
//      // Undeclared exception!
//      try {
//        pipeCommand0.evaluate(inputStream0, outputStream0);
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
////         verifyException("sg.edu.nus.comp.cs4218.impl.cmd.PipeCommand", e);
//      }
//  }

  @Test 
  public void test1()  throws Throwable  {
      PipeCommand pipeCommand0 = new PipeCommand((List<CallCommand>) null);
      List<CallCommand> list0 = pipeCommand0.getCallCommands();
      assertNull(list0);
  }

  @Test 
  public void test2()  throws Throwable  {
      PipeCommand pipeCommand0 = new PipeCommand((List<CallCommand>) null);
      pipeCommand0.terminate();
  }
}
