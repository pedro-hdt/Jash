/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 19 15:48:42 GMT 2020
 */

package automated.sg.edu.nus.comp.cs4218.impl.util;


import static org.junit.jupiter.api.Assertions.assertNotNull;
import static org.junit.jupiter.api.Assertions.fail;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.nio.file.Path;

import org.junit.jupiter.api.Test;

import sg.edu.nus.comp.cs4218.exception.ShellException;
import sg.edu.nus.comp.cs4218.impl.util.IOUtils;

@SuppressWarnings("PMD")
public class IOUtils_ESTest {

  @Test
  public void test00()  throws Throwable  {
      OutputStream outputStream0 = IOUtils.openOutputStream("8m");
      assertNotNull(outputStream0);
  }

  @Test 
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.resolveFilePath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test 
  public void test02()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.openOutputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test 
  public void test03()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.openInputStream((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test 
  public void test04()  throws Throwable  {
      try { 
        IOUtils.getLinesFromInputStream((InputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("java.io.Reader", e);
      }
  }

  @Test 
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-670), 3139);
      try { 
        IOUtils.getLinesFromInputStream(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test 
  public void test06()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        IOUtils.getLinesFromInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
//         verifyException("java.io.PipedInputStream", e);
      }
  }

//  @Test
//  public void test07()  throws Throwable  {
//      MockFile mockFile0 = new MockFile("<Fb1>_");
//      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
//      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("<Fb1>_");
//      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
//      try {
//        IOUtils.closeOutputStream(mockFileOutputStream0);
//        fail("Expecting exception: Exception");
//
//      } catch(Exception e) {
//         //
//         // shell: Unable to close streams
//         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.util.IOUtils", e);
//      }
//  }

//  @Test
//  public void test08()  throws Throwable  {
//      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
//      doReturn(false, false).when(enumeration0).hasMoreElements();
//      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
//      IOUtils.closeInputStream(sequenceInputStream0);
//  }

  @Test 
  public void test09()  throws Throwable  {
      Path path0 = IOUtils.resolveFilePath("oracle.jrockit.jfr.settings.PresetFile$PresetFileFilter");
      assertNotNull(path0);
  }

//  @Test
//  public void test10()  throws Throwable  {
//      MockFile mockFile0 = new MockFile("<Fb1>_");
//      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
//      mockFileOutputStream0.write(0);
//      InputStream inputStream0 = IOUtils.openInputStream("<Fb1>_");
//      List<String> list0 = IOUtils.getLinesFromInputStream(inputStream0);
//      assertEquals(1, list0.size());
//  }
//
//  @Test
//  public void test11()  throws Throwable  {
//      MockFile mockFile0 = new MockFile("<Fb1>_");
//      mockFile0.createNewFile();
//      InputStream inputStream0 = IOUtils.openInputStream("<Fb1>_");
//      List<String> list0 = IOUtils.getLinesFromInputStream(inputStream0);
//      assertFalse(list0.contains("<Fb1>_"));
//  }

  @Test 
  public void test12()  throws Throwable  {
      IOUtils.closeOutputStream((OutputStream) null);
  }

//  @Test
//  public void test13()  throws Throwable  {
//      MockFile mockFile0 = new MockFile("<Fb1>_");
//      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
//      IOUtils.closeOutputStream(mockFileOutputStream0);
//  }
//
//  @Test
//  public void test14()  throws Throwable  {
//      MockFile mockFile0 = new MockFile("<Fb1>_");
//      mockFile0.createNewFile();
//      InputStream inputStream0 = IOUtils.openInputStream("<Fb1>_");
//      IOUtils.closeInputStream(inputStream0);
//  }

  @Test 
  public void test15()  throws Throwable  {
      IOUtils.closeInputStream((InputStream) null);
  }

  @Test 
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.openOutputStream("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException | ShellException e) {
         //
         // org.evosuite.runtime.mock.java.lang.MockThrowable cannot be cast to sg.edu.nus.comp.cs4218.exception.ShellException
         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.util.IOUtils", e);
      }
  }

  @Test 
  public void test17()  throws Throwable  {
      try { 
        IOUtils.openInputStream("\"");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // shell: No such file or directory
         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.util.IOUtils", e);
      }
  }
}
