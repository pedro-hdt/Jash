/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 19 16:58:53 GMT 2020
 */

package automated.sg.edu.nus.comp.cs4218.impl.parser;


import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;

import org.junit.jupiter.api.Test;

import sg.edu.nus.comp.cs4218.impl.parser.MvArgsParser;

@SuppressWarnings("PMD")
public class MvArgsParser_ESTest {

  @Test
  public void test00()  throws Throwable  {
      MvArgsParser mvArgsParser0 = new MvArgsParser();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "illegal option -- ";
      mvArgsParser0.parse(stringArray0);
      String string0 = mvArgsParser0.getTargetOperand();
      assertEquals("illegal option -- ", string0);
  }

  @Test 
  public void test01()  throws Throwable  {
      MvArgsParser mvArgsParser0 = new MvArgsParser();
      assertTrue(mvArgsParser0.shouldOverwrite());
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "illegal option -- ";
      stringArray0[1] = "";
      mvArgsParser0.parse(stringArray0);
      String string0 = mvArgsParser0.getTargetOperand();
      assertEquals("", string0);
  }

//  @Test
//  public void test02()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      mvArgsParser0.flags = null;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.shouldOverwrite();
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//      }
//  }
//
//  @Test
//  public void test03()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      String[] stringArray0 = new String[3];
//      stringArray0[0] = "illegal option -- ";
//      stringArray0[1] = "illegal option -- ";
//      stringArray0[2] = "illegal option -- ";
//      List<String> list0 = mvArgsParser0.nonFlagArgs;
//      mvArgsParser0.nonFlagArgs = list0;
//      mvArgsParser0.parse(stringArray0);
//      List<String> list1 = mvArgsParser0.getSourceOperands();
//      mvArgsParser0.parse(stringArray0);
//      mvArgsParser0.nonFlagArgs = list1;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.getTargetOperand();
//        fail("Expecting exception: ConcurrentModificationException");
//
//      } catch(ConcurrentModificationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.ArrayList$SubList", e);
//      }
//  }
//
//  @Test
//  public void test04()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      mvArgsParser0.nonFlagArgs = null;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.getTargetOperand();
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.parser.MvArgsParser", e);
//      }
//  }
//
//  @Test
//  public void test05()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      String[] stringArray0 = new String[1];
//      stringArray0[0] = "illegal option -- ";
//      mvArgsParser0.parse(stringArray0);
//      List<String> list0 = mvArgsParser0.getSourceOperands();
//      mvArgsParser0.nonFlagArgs = list0;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.getTargetOperand();
//        fail("Expecting exception: IndexOutOfBoundsException");
//
//      } catch(IndexOutOfBoundsException e) {
//         //
//         // Index: -1, Size: 0
//         //
//         verifyException("java.util.ArrayList$SubList", e);
//      }
//  }
//
//  @Test
//  public void test06()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      String[] stringArray0 = new String[3];
//      stringArray0[0] = "illegal option -- ";
//      stringArray0[1] = "illegal option -- ";
//      stringArray0[2] = "illegal option -- ";
//      List<String> list0 = mvArgsParser0.nonFlagArgs;
//      mvArgsParser0.nonFlagArgs = list0;
//      mvArgsParser0.parse(stringArray0);
//      List<String> list1 = mvArgsParser0.getSourceOperands();
//      mvArgsParser0.parse(stringArray0);
//      mvArgsParser0.nonFlagArgs = list1;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.getSourceOperands();
//        fail("Expecting exception: ConcurrentModificationException");
//
//      } catch(ConcurrentModificationException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("java.util.ArrayList$SubList", e);
//      }
//  }
//
//  @Test
//  public void test07()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      mvArgsParser0.nonFlagArgs = null;
//      // Undeclared exception!
//      try {
//        mvArgsParser0.getSourceOperands();
//        fail("Expecting exception: NullPointerException");
//
//      } catch(NullPointerException e) {
//         //
//         // no message in exception (getMessage() returned null)
//         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.parser.MvArgsParser", e);
//      }
//  }
//
//  @Test
//  public void test08()  throws Throwable  {
//      MvArgsParser mvArgsParser0 = new MvArgsParser();
//      assertTrue(mvArgsParser0.shouldOverwrite());
//
//      Set<Character> set0 = mvArgsParser0.legalFlags;
//      mvArgsParser0.flags = set0;
//      boolean boolean0 = mvArgsParser0.shouldOverwrite();
//      assertFalse(boolean0);
//  }

  @Test 
  public void test09()  throws Throwable  {
      MvArgsParser mvArgsParser0 = new MvArgsParser();
      boolean boolean0 = mvArgsParser0.shouldOverwrite();
      assertTrue(boolean0);
  }

  @Test 
  public void test10()  throws Throwable  {
      MvArgsParser mvArgsParser0 = new MvArgsParser();
      // Undeclared exception!
      try { 
        mvArgsParser0.getTargetOperand();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test 
  public void test11()  throws Throwable  {
      MvArgsParser mvArgsParser0 = new MvArgsParser();
      // Undeclared exception!
      try { 
        mvArgsParser0.getSourceOperands();
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // fromIndex(0) > toIndex(-1)
         //
      }
  }

    @Test
    public void test12() throws Throwable  {
        MvArgsParser mvArgsParser0 = new MvArgsParser();
        mvArgsParser0.parse("file1.txt", "dir");
        assertEquals(1, mvArgsParser0.getSourceOperands().size());

    }
}
