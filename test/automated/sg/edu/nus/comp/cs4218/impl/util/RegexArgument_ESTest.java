/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 19 15:14:25 GMT 2020
 */

package automated.sg.edu.nus.comp.cs4218.impl.util;


import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;

import java.nio.file.InvalidPathException;
import java.util.List;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import sg.edu.nus.comp.cs4218.Environment;
import sg.edu.nus.comp.cs4218.impl.util.RegexArgument;

@SuppressWarnings("PMD")
public class RegexArgument_ESTest {

  @Test
  public void test00()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("/", "/", true);
      List<String> list0 = regexArgument0.globFiles();
      assertTrue(list0.contains("/"));
  }

  @Test 
  public void test01()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("");
      String string0 = regexArgument0.toString();
      assertEquals("", string0);
  }

  @Test 
  public void test02()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      // Undeclared exception!
      try { 
        regexArgument0.merge((RegexArgument) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
          assertTrue(e instanceof NullPointerException);
      }
  }

  @Test
  @Disabled("causes other tests state to be wrong")
  public void test03()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("Quser\u0000dirEQEQE");
      regexArgument0.appendAsterisk();
      Environment.currentDirectory = "Quser\u0000dirEQEQE";
      // Undeclared exception!
      try { 
        regexArgument0.globFiles();
        fail("Expecting exception: InvalidPathException");
      
      } catch(InvalidPathException e) {
      }
  }

  @Test 
  public void test04()  throws Throwable  {
      RegexArgument regexArgument0 = null;
      try {
        regexArgument0 = new RegexArgument((String) null, "", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
//         verifyException("sg.edu.nus.comp.cs4218.impl.util.RegexArgument", e);
          assertTrue(e instanceof NullPointerException);
      }
  }

  @Test 
  public void test05()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      boolean boolean0 = regexArgument0.isEmpty();
      assertTrue(boolean0);
  }

  @Test 
  public void test06()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      regexArgument0.append('f');
      boolean boolean0 = regexArgument0.isEmpty();
      assertEquals("f", regexArgument0.toString());
      assertFalse(boolean0);
  }

  @Test 
  public void test07()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      regexArgument0.appendAsterisk();
      regexArgument0.globFiles();
      assertEquals("*", regexArgument0.toString());
  }

  @Test 
  public void test08()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      regexArgument0.appendAsterisk();
      regexArgument0.merge("=`D;@5VX7H/_+@<&");
      regexArgument0.globFiles();
      assertEquals("*=`D;@5VX7H/_+@<&", regexArgument0.toString());
  }

  @Test 
  public void test09()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      List<String> list0 = regexArgument0.globFiles();
      assertFalse(list0.isEmpty());
  }

  @Test 
  public void test10()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("sg.edu.nus.comp.cs4218.Environment");
      regexArgument0.merge(regexArgument0);
      assertEquals("sg.edu.nus.comp.cs4218.Environmentsg.edu.nus.comp.cs4218.Environment", regexArgument0.toString());
  }

  @Test 
  public void test11()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument();
      RegexArgument regexArgument1 = new RegexArgument("/Users/tshradheya/Desktop/Sem8/CS4218/Project/cs4218-project-ay1920-s2-2020-team03", "W+l9jf4+p", true);
      regexArgument0.merge(regexArgument1);
      regexArgument0.merge(regexArgument1);
      assertEquals("W+l9jf4+pW+l9jf4+p", regexArgument0.toString());
  }

  @Test 
  public void test12()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("Ah\"/q* 0o!G2D", "Ah\"/q* 0o!G2D", true);
      assertEquals("Ah\"/q* 0o!G2D", regexArgument0.toString());
  }

  @Test 
  public void test13()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("P>'pI<x?tBt");
      String string0 = regexArgument0.toString();
      assertEquals("P>'pI<x?tBt", string0);
  }

  @Test 
  public void test14()  throws Throwable  {
      RegexArgument regexArgument0 = null;
      try {
        regexArgument0 = new RegexArgument((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test 
  public void test15()  throws Throwable  {
      RegexArgument regexArgument0 = new RegexArgument("", "", false);
      // Undeclared exception!
      try { 
        regexArgument0.merge((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
